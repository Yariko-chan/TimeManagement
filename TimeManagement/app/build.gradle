apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'koin'

def debugPropertiesFile = rootProject.file("debug_keystore\\debug.properties")
def debugProperties = new Properties()
debugProperties.load(new FileInputStream(debugPropertiesFile))
def releasePropertiesFile = rootProject.file("${release_properties}")
def releaseProperties = new Properties()
releaseProperties.load(new FileInputStream(releasePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ganeeva.d.f.timemanagement"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 6
        versionName "6.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    signingConfigs{
        debug {
            storeFile file(debugProperties['storeFile'])
            storePassword debugProperties['storePassword']
            keyAlias debugProperties['keyAlias']
            keyPassword debugProperties['keyPassword']
        }
        release {
            storeFile file("${release_keystore_path}")
            storePassword releaseProperties['storePassword']
            keyAlias releaseProperties['keyAlias']
            keyPassword releaseProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName = new File("${variant.buildType.name}_${defaultConfig.versionCode}.apk")
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'

    // Android KTX
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "androidx.activity:activity-ktx:$activity_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$livedata_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Koin
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"
    implementation "org.koin:koin-android-ext:$koin_version"

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
